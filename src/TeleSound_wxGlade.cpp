// -*- C++ -*-
//
// generated by wxGlade 1.0.4 on Sun Jun 25 18:02:12 2023
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include "TeleSound_wxGlade.h"




GUIFrame::GUIFrame(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxFrame(parent, id, title, pos, size, wxDEFAULT_FRAME_STYLE)
{
    SetSize(wxSize(938, 600));
    SetTitle(wxT("TeleSound ver. 1.1 (Marek.Blok@eti.pg.edu.pl)"));
    statusbar = CreateStatusBar(1);
    int statusbar_widths[] = { 0 };
    statusbar->SetStatusWidths(1, statusbar_widths);
    
    sashWindow = new wxSplitterWindow(this, wxID_ANY);
    sashWindow->SetMinimumPaneSize(20);
    GLcanvas = new MyGLCanvas(0, sashWindow, wxID_ANY);
    notebookWindow = new wxNotebook(sashWindow, wxID_ANY);
    notebookWindow->SetMinSize(wxSize(300, -1));
    page1 = new wxPanel(notebookWindow, E_PID_tasks);
    notebookWindow->AddPage(page1, wxT("Konfiguracja"));
    wxBoxSizer* sizerPanel = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* TaskActions_sizer = new wxStaticBoxSizer(new wxStaticBox(page1, wxID_ANY, wxT("Kontrola przetwarzania")), wxHORIZONTAL);
    sizerPanel->Add(TaskActions_sizer, 0, wxEXPAND, 0);
    wxStaticBitmap* ConnectionState = new wxStaticBitmap(page1, ID_connection_state, wxBitmap( new_xpm ), wxDefaultPosition, wxDefaultSize, wxBORDER_NONE);
    ConnectionState->SetToolTip(wxT("Status połączenia"));
    ConnectionState->Enable(0);
    ConnectionState->Hide();
    TaskActions_sizer->Add(ConnectionState, 0, wxALIGN_CENTER_VERTICAL|wxALL, 3);
    wxStaticLine* static_line_4 = new wxStaticLine(page1, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLI_VERTICAL);
    TaskActions_sizer->Add(static_line_4, 0, wxALL|wxEXPAND, 5);
    RunProcessingButton = new wxBitmapButton(page1, ID_RUN_TASK, wxBitmap( play_xpm ));
    RunProcessingButton->SetToolTip(wxT("Rozpocznij przetwarzanie"));
    RunProcessingButton->SetSize(RunProcessingButton->GetBestSize());
    TaskActions_sizer->Add(RunProcessingButton, 0, 0, 0);
    PauseProcessingButton = new wxBitmapButton(page1, ID_PAUSE_TASK, wxBitmap( pause_xpm ));
    PauseProcessingButton->SetToolTip(wxT("Wstrzymaj przetwarzanie"));
    PauseProcessingButton->SetSize(PauseProcessingButton->GetBestSize());
    TaskActions_sizer->Add(PauseProcessingButton, 0, 0, 0);
    StopProcessingButton = new wxBitmapButton(page1, ID_STOP_TASK, wxBitmap( stop_xpm ));
    StopProcessingButton->SetToolTip(wxT("Zakończ przetwarzanie"));
    StopProcessingButton->SetSize(StopProcessingButton->GetBestSize());
    TaskActions_sizer->Add(StopProcessingButton, 0, 0, 0);
    wxStaticLine* static_line_3 = new wxStaticLine(page1, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLI_VERTICAL);
    TaskActions_sizer->Add(static_line_3, 0, wxALL|wxEXPAND, 5);
    MicStateButton = new wxBitmapButton(page1, ID_MIKE_ON_OFF, wxBitmap( mike_off_xpm ));
    MicStateButton->SetToolTip(wxT("Status mikrofonu (wyłączony)"));
    MicStateButton->SetSize(MicStateButton->GetBestSize());
    TaskActions_sizer->Add(MicStateButton, 0, 0, 0);
    LocalSignalStateButton = new wxBitmapButton(page1, ID_LOCAL_SIGNAL_ON_OFF, wxBitmap( local_off_xpm ));
    LocalSignalStateButton->SetToolTip(wxT("Sygnał lokalny (wyłączony)"));
    LocalSignalStateButton->SetSize(LocalSignalStateButton->GetBestSize());
    TaskActions_sizer->Add(LocalSignalStateButton, 0, 0, 0);
    wxStaticBoxSizer* NetParams_sizer = new wxStaticBoxSizer(new wxStaticBox(page1, wxID_ANY, wxT("Konfiguracja połączenia")), wxVERTICAL);
    sizerPanel->Add(NetParams_sizer, 0, wxEXPAND, 0);
    wxBoxSizer* subsizer = new wxBoxSizer(wxHORIZONTAL);
    NetParams_sizer->Add(subsizer, 0, wxALL|wxEXPAND, 5);
    WorksAsServer = new wxRadioButton(page1, ID_work_as_server, wxT("serwer"), wxDefaultPosition, wxDefaultSize, wxRB_GROUP);
    subsizer->Add(WorksAsServer, 1, wxBOTTOM, 5);
    WorksAsClient = new wxRadioButton(page1, ID_work_as_client, wxT("klient"));
    subsizer->Add(WorksAsClient, 1, wxBOTTOM, 5);
    ServerAddressEdit = new wxTextCtrl(page1, ID_server_address, wxT("xxx"), wxDefaultPosition, wxDefaultSize, wxTE_LEFT);
    NetParams_sizer->Add(ServerAddressEdit, 0, wxBOTTOM|wxEXPAND, 5);
    wxBoxSizer* subsizer_1 = new wxBoxSizer(wxHORIZONTAL);
    NetParams_sizer->Add(subsizer_1, 0, wxBOTTOM|wxEXPAND, 5);
    wxStaticText* SamplingRateST = new wxStaticText(page1, wxID_ANY, wxT("Sampling rate:"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT);
    subsizer_1->Add(SamplingRateST, 0, wxALIGN_CENTER_VERTICAL|wxALL|wxFIXED_MINSIZE, 5);
    const wxString SamplingRateBox_choices[] = {
        wxT("8000"),
        wxT("11025"),
        wxT("16000"),
        wxT("22050"),
        wxT("32000"),
        wxT("44100"),
        wxT("48000"),
    };
    SamplingRateBox = new wxComboBox(page1, ID_SELECT_SAMPLING_RATE, wxT(""), wxDefaultPosition, wxDefaultSize, 7, SamplingRateBox_choices, wxCB_DROPDOWN|wxCB_READONLY);
    SamplingRateBox->SetSelection(2);
    subsizer_1->Add(SamplingRateBox, 1, wxBOTTOM|wxEXPAND|wxLEFT|wxTOP, 5);
    wxStaticBoxSizer* GraphConfig_sizer = new wxStaticBoxSizer(new wxStaticBox(page1, wxID_ANY, wxT("Konfiguracja wykresów")), wxVERTICAL);
    sizerPanel->Add(GraphConfig_sizer, 0, wxEXPAND, 0);
    const wxString DrawModeBox_choices[] = {
        wxT("Bez wykresów"),
        wxT("Przebieg czasowy"),
        wxT("Histogram"),
        wxT("Periodogram"),
        wxT("Spectrogram"),
    };
    DrawModeBox = new wxComboBox(page1, ID_SELECT_DRAW_MODE, wxT(""), wxDefaultPosition, wxDefaultSize, 5, DrawModeBox_choices, wxCB_DROPDOWN|wxCB_READONLY);
    DrawModeBox->SetSelection(0);
    GraphConfig_sizer->Add(DrawModeBox, 1, wxBOTTOM|wxEXPAND|wxTOP, 5);
    PSD_slots_text = new wxTextCtrl(page1, wxID_ANY, wxT("200"), wxDefaultPosition, wxDefaultSize, wxTE_READONLY);
    GraphConfig_sizer->Add(PSD_slots_text, 0, wxLEFT|wxRIGHT|wxTOP, 10);
    PSD_slots_slider = new wxSlider(page1, ID_PSD_SLOTS_SLIDER, 2, 0, 6);
    GraphConfig_sizer->Add(PSD_slots_slider, 0, wxBOTTOM|wxEXPAND|wxTOP, 5);
    wxStaticBoxSizer* AudioMixer_sizer = new wxStaticBoxSizer(new wxStaticBox(page1, wxID_ANY, wxT("Ustawienia karty dźwiękowej")), wxVERTICAL);
    sizerPanel->Add(AudioMixer_sizer, 0, wxEXPAND, 0);
    wxBoxSizer* sizer_7 = new wxBoxSizer(wxHORIZONTAL);
    AudioMixer_sizer->Add(sizer_7, 1, wxEXPAND|wxLEFT|wxRIGHT, 5);
    wxStaticText* SourceLine_ST = new wxStaticText(page1, wxID_ANY, wxT("Nagrywanie:"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT);
    sizer_7->Add(SourceLine_ST, 1, wxALIGN_CENTER_VERTICAL|wxALL|wxFIXED_MINSIZE, 5);
    const wxString SourceLine_ComboBox_choices[] = {};
    SourceLine_ComboBox = new wxComboBox(page1, ID_SELECT_MIXER_SOURCE_LINE, wxT(""), wxDefaultPosition, wxDefaultSize, 0, SourceLine_ComboBox_choices, wxCB_DROPDOWN|wxCB_READONLY);
    sizer_7->Add(SourceLine_ComboBox, 8, wxBOTTOM|wxEXPAND|wxLEFT|wxTOP, 5);
    SourceLine_slider = new wxSlider(page1, ID_SourceLine_SLIDER, 0, 0, 10);
    AudioMixer_sizer->Add(SourceLine_slider, 0, wxEXPAND, 0);
    wxBoxSizer* sizer_8 = new wxBoxSizer(wxHORIZONTAL);
    AudioMixer_sizer->Add(sizer_8, 1, wxEXPAND|wxLEFT|wxRIGHT, 5);
    wxStaticText* DestLine_ST = new wxStaticText(page1, wxID_ANY, wxT("Odtwarzanie:"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT);
    sizer_8->Add(DestLine_ST, 1, wxALIGN_CENTER_VERTICAL|wxALL|wxFIXED_MINSIZE, 5);
    const wxString DestLine_ComboBox_choices[] = {};
    DestLine_ComboBox = new wxComboBox(page1, ID_SELECT_MIXER_DEST_LINE, wxT(""), wxDefaultPosition, wxDefaultSize, 0, DestLine_ComboBox_choices, wxCB_DROPDOWN|wxCB_READONLY);
    sizer_8->Add(DestLine_ComboBox, 8, wxBOTTOM|wxLEFT|wxTOP, 5);
    DestLine_slider = new wxSlider(page1, ID_DestLine_SLIDER, 0, 0, 10);
    AudioMixer_sizer->Add(DestLine_slider, 0, wxEXPAND, 0);
    wxStaticLine* static_line_1 = new wxStaticLine(page1, wxID_ANY);
    AudioMixer_sizer->Add(static_line_1, 0, wxBOTTOM|wxEXPAND|wxTOP, 10);
    wxBoxSizer* sizer_9 = new wxBoxSizer(wxHORIZONTAL);
    AudioMixer_sizer->Add(sizer_9, 1, wxEXPAND, 0);
    wxStaticText* MasterLine_ST = new wxStaticText(page1, wxID_ANY, wxT("Głośność główna:"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT);
    sizer_9->Add(MasterLine_ST, 0, wxALL, 5);
    MasterLine_slider = new wxSlider(page1, ID_MasterLine_SLIDER, 0, 0, 10);
    sizer_9->Add(MasterLine_slider, 1, wxEXPAND, 0);
    page2 = new wxPanel(notebookWindow, E_PID_CHANNEL);
    notebookWindow->AddPage(page2, wxT("Model kanału"));
    wxBoxSizer* sizer_3 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_2 = new wxStaticBoxSizer(new wxStaticBox(page2, wxID_ANY, wxT("Model kanału")), wxVERTICAL);
    sizer_3->Add(sizer_2, 0, wxEXPAND, 0);
    SNR_text = new wxTextCtrl(page2, wxID_ANY, wxT("80 dB"), wxDefaultPosition, wxDefaultSize, wxTE_READONLY);
    sizer_2->Add(SNR_text, 0, wxALL|wxEXPAND, 10);
    SNR_slider = new wxSlider(page2, ID_SNR_SLIDER, 100, 0, 100);
    sizer_2->Add(SNR_slider, 0, wxALL|wxEXPAND, 5);
    wxStaticLine* static_line_2 = new wxStaticLine(page2, wxID_ANY);
    sizer_2->Add(static_line_2, 0, wxBOTTOM|wxEXPAND|wxTOP, 10);
    HPF_slider = new wxSlider(page2, ID_HPF_SLIDER, 0, 0, 100);
    sizer_2->Add(HPF_slider, 0, wxEXPAND|wxLEFT|wxRIGHT|wxTOP, 5);
    wxGridSizer* sizer_4 = new wxGridSizer(1, 2, 0, 5);
    sizer_2->Add(sizer_4, 1, wxEXPAND|wxLEFT|wxRIGHT, 10);
    HPF_text = new wxTextCtrl(page2, wxID_ANY, wxT("0 Hz"), wxDefaultPosition, wxDefaultSize, wxTE_READONLY);
    sizer_4->Add(HPF_text, 0, wxALIGN_CENTER_VERTICAL, 0);
    LPF_text = new wxTextCtrl(page2, wxID_ANY, wxT("8000 Hz"), wxDefaultPosition, wxDefaultSize, wxTE_READONLY);
    sizer_4->Add(LPF_text, 0, wxALIGN_CENTER_VERTICAL|wxALIGN_RIGHT, 0);
    LPF_slider = new wxSlider(page2, ID_LPF_SLIDER, 100, 0, 100);
    sizer_2->Add(LPF_slider, 0, wxBOTTOM|wxEXPAND|wxLEFT|wxRIGHT, 5);
    sizer_3->Add(20, 20, 0, 0, 0);
    sizer_5 = new wxStaticBoxSizer(new wxStaticBox(page2, wxID_ANY, wxT("Sygnał mowy")), wxVERTICAL);
    sizer_3->Add(sizer_5, 0, wxEXPAND, 0);
    wxBoxSizer* sizer_6 = new wxBoxSizer(wxHORIZONTAL);
    sizer_5->Add(sizer_6, 0, wxALL|wxEXPAND, 5);
    UseLogatoms = new wxRadioButton(page2, ID_use_logatoms, wxT("Logatomy"), wxDefaultPosition, wxDefaultSize, wxRB_GROUP);
    sizer_6->Add(UseLogatoms, 0, 0, 0);
    UseSentences = new wxRadioButton(page2, ID_use_sentences, wxT("Zdania"));
    sizer_6->Add(UseSentences, 0, 0, 0);
    wxBoxSizer* sizer_10 = new wxBoxSizer(wxHORIZONTAL);
    sizer_5->Add(sizer_10, 0, wxALL|wxEXPAND, 5);
    wxStaticText* VoiceTypeST = new wxStaticText(page2, wxID_ANY, wxT("Głos:"));
    sizer_10->Add(VoiceTypeST, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
    const wxString VoiceTypeBox_choices[] = {
        wxT("losowo"),
        wxT("męski 1"),
        wxT("męski 2 "),
        wxT("żeński 1 "),
        wxT("żeński 2"),
    };
    VoiceTypeBox = new wxComboBox(page2, ID_voice_type, wxT(""), wxDefaultPosition, wxDefaultSize, 5, VoiceTypeBox_choices, wxCB_DROPDOWN|wxCB_READONLY);
    VoiceTypeBox->SetSelection(0);
    sizer_10->Add(VoiceTypeBox, 1, wxALIGN_CENTER_VERTICAL, 0);
    wxBoxSizer* sizer_11 = new wxBoxSizer(wxHORIZONTAL);
    sizer_5->Add(sizer_11, 0, wxALL|wxEXPAND, 5);
    SelectVoiceFile = new wxButton(page2, ID_select_voice_file, wxT("Losuj"));
    sizer_11->Add(SelectVoiceFile, 0, wxBOTTOM|wxRIGHT|wxTOP, 5);
    VoiceFileIndex = new wxTextCtrl(page2, ID_select_voice_file, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_READONLY);
    sizer_11->Add(VoiceFileIndex, 1, wxBOTTOM|wxRIGHT|wxTOP, 5);
    wxBoxSizer* sizer_12 = new wxBoxSizer(wxHORIZONTAL);
    sizer_11->Add(sizer_12, 0, wxEXPAND, 0);
    OpenWAVEfile = new wxBitmapButton(page2, ID_open_wav_file, wxBitmap( play_xpm ));
    OpenWAVEfile->SetSize(OpenWAVEfile->GetBestSize());
    sizer_12->Add(OpenWAVEfile, 1, wxALIGN_CENTER_VERTICAL, 0);
    StopWAVEfile = new wxBitmapButton(page2, ID_stop_wav_file, wxBitmap( stop_xpm ));
    StopWAVEfile->SetSize(StopWAVEfile->GetBestSize());
    sizer_12->Add(StopWAVEfile, 1, wxALIGN_CENTER_VERTICAL, 0);
    wxStaticLine* static_line_5 = new wxStaticLine(page2, wxID_ANY);
    sizer_5->Add(static_line_5, 0, wxALL|wxEXPAND, 5);
    showSentenceText = new wxCheckBox(page2, ID_show_text_checkbox, wxT("Pokaż tekst"));
    sizer_5->Add(showSentenceText, 0, wxALL, 5);
    SentenceTranscription = new wxTextCtrl(page2, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_READONLY);
    SentenceTranscription->Enable(0);
    SentenceTranscription->Hide();
    sizer_5->Add(SentenceTranscription, 0, wxALL|wxEXPAND|wxRESERVE_SPACE_EVEN_IF_HIDDEN, 5);
    page3 = new wxPanel(notebookWindow, E_PID_MORSE);
    notebookWindow->AddPage(page3, wxT("Telegraf"));
    wxBoxSizer* sizer_13 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_14 = new wxStaticBoxSizer(new wxStaticBox(page3, wxID_ANY, wxT("Szybkość kluczowania")), wxVERTICAL);
    sizer_13->Add(sizer_14, 0, wxEXPAND, 0);
    WPM_text = new wxTextCtrl(page3, wxID_ANY, wxT("20 WPM"), wxDefaultPosition, wxDefaultSize, wxTE_READONLY);
    sizer_14->Add(WPM_text, 0, wxEXPAND|wxLEFT|wxRIGHT|wxTOP, 5);
    WPM_slider = new wxSlider(page3, ID_WPM_SLIDER, 3, 0, 5);
    sizer_14->Add(WPM_slider, 0, wxBOTTOM|wxEXPAND|wxLEFT|wxRIGHT, 5);
    wxStaticBoxSizer* sizer_15 = new wxStaticBoxSizer(new wxStaticBox(page3, wxID_ANY, wxT("Nadajnik")), wxVERTICAL);
    sizer_13->Add(sizer_15, 1, wxEXPAND, 0);
    wxStaticText* AsciiTextST = new wxStaticText(page3, wxID_ANY, wxT("Nadawany tekst:"));
    sizer_15->Add(AsciiTextST, 0, 0, 0);
    AsciiTextEntry = new wxTextCtrl(page3, ID_ascii_text, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_LEFT|wxTE_MULTILINE);
    sizer_15->Add(AsciiTextEntry, 1, wxALL|wxEXPAND, 5);
    sizer_18 = new wxBoxSizer(wxHORIZONTAL);
    sizer_15->Add(sizer_18, 0, wxEXPAND, 0);
    wxStaticText* label_2 = new wxStaticText(page3, wxID_ANY, wxT("Ręczne nadawanie:"));
    sizer_18->Add(label_2, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
    TextCtrlPlaceholder = new wxTextCtrl(page3, wxID_ANY, wxEmptyString);
    sizer_18->Add(TextCtrlPlaceholder, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
    SendAsciiText = new wxButton(page3, ID_send_ascii_text, wxT("Wyślij"));
    sizer_18->Add(SendAsciiText, 1, wxALIGN_CENTER_VERTICAL|wxALL, 5);
    wxStaticBoxSizer* sizer_16 = new wxStaticBoxSizer(new wxStaticBox(page3, wxID_ANY, wxT("Odbiornik")), wxVERTICAL);
    sizer_13->Add(sizer_16, 1, wxEXPAND, 0);
    MorseReceiverState = new wxCheckBox(page3, ID_morse_receiver_state, wxT("włączony"));
    sizer_16->Add(MorseReceiverState, 0, wxALL, 5);
    AsciiTextReceiver = new wxTextCtrl(page3, ID_received_ascii_text, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_LEFT|wxTE_MULTILINE|wxTE_READONLY);
    sizer_16->Add(AsciiTextReceiver, 1, wxEXPAND, 0);
    page5 = new wxPanel(notebookWindow, E_PID_status);
    notebookWindow->AddPage(page5, wxT("Status programu"));
    wxBoxSizer* sizer_17 = new wxBoxSizer(wxHORIZONTAL);
    StatusBox = new wxTextCtrl(page5, ID_STATUSBOX, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxTE_RICH|wxTE_WORDWRAP);
    sizer_17->Add(StatusBox, 1, wxEXPAND, 0);
    page6 = new wxPanel(notebookWindow, E_PID_MODULATOR);
    notebookWindow->AddPage(page6, wxT("Modulator"));
    wxStaticBoxSizer* sizer_1 = new wxStaticBoxSizer(new wxStaticBox(page6, wxID_ANY, wxT("Ustawienia modulatora")), wxVERTICAL);
    ModulatorState = new wxCheckBox(page6, ID_modulator_state, wxT("Włącz modulator"));
    sizer_1->Add(ModulatorState, 0, wxALIGN_CENTER_HORIZONTAL, 0);
    sizer_1->Add(0, 0, 0, 0, 0);
    sizer_1->Add(0, 0, 0, 0, 0);
    
    page6->SetSizer(sizer_1);
    page5->SetSizer(sizer_17);
    page3->SetSizer(sizer_13);
    page2->SetSizer(sizer_3);
    page1->SetSizer(sizerPanel);
    sashWindow->SplitVertically(GLcanvas, notebookWindow, 500);
    Layout();
}

